name: cd-frontend-movies-uda

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the git repo
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: solution/frontend/package-lock.json
        
    - name: Install Deps
      working-directory: solution/frontend
      run: npm ci
  
    - name: Test
      run: cd solution/frontend && npm run test

  Lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check the git repo
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: solution/frontend/package-lock.json

    - name: Install Deps
      working-directory: solution/frontend
      run: npm ci

    - name: Checkout Run Lint
      run: cd solution/frontend && npm run lint

  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the git repo
      uses: actions/checkout@v3
    
    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: solution/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1
  

    - name: Login AWS
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image
      working-directory: solution/frontend
      env:
        IMAGE_TAG: latest
        REPO: frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://ab78f1bdfa72245cab0ebeaf6884b81a-274140484.us-east-1.elb.amazonaws.com --tag 435720610029.dkr.ecr.us-east-1.amazonaws.com/$REPO:$IMAGE_TAG .
        docker push 435720610029.dkr.ecr.us-east-1.amazonaws.com/$REPO:$IMAGE_TAG
    

    - name: Configure kubectl
      run:
       aws eks update-kubeconfig --name cluster --region us-east-1


    - name: Deploy Docker Image
      working-directory: solution/frontend/k8s
      env:
        IMAGE_TAG: latest
        REPO: frontend
      run: |
          kustomize edit set image frontend=435720610029.dkr.ecr.us-east-1.amazonaws.com/$REPO:$IMAGE_TAG
          kustomize build | kubectl apply -f -
